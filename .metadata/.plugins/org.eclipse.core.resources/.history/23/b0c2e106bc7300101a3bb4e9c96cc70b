package com.br.api.forum_hub.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.AuthenticationException;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.util.UriComponentsBuilder;

import com.br.api.forum_hub.dto.AutenticacaoDTO;
import com.br.api.forum_hub.dto.UsuarioDTO;
import com.br.api.forum_hub.dto.UsuarioResponseDTO;
import com.br.api.forum_hub.model.Usuario;
import com.br.api.forum_hub.repository.IUsuarioRepository;
import com.br.api.forum_hub.service.AutenticacaoService;
import com.br.api.forum_hub.service.TokenService;

import jakarta.transaction.Transactional;
import jakarta.validation.Valid;

@RestController
@RequestMapping("/forum_hub")
public class AutenticacaoController {
	
	@Autowired
	private AuthenticationManager manager;
	@Autowired
	private TokenService tokenService;
	@Autowired
	private AutenticacaoService autenticacaoService;
	@Autowired
	private IUsuarioRepository repository;
	
	
	
	@PostMapping("/cadastrar")
	@Transactional
	public ResponseEntity<UsuarioResponseDTO> cadastrar(
			@RequestBody @Valid UsuarioDTO dto, UriComponentsBuilder uriComponentsBuilder){
		
		UsuarioResponseDTO usuarioCadastrado = autenticacaoService.cadastrar(dto);
		
		var uri = uriComponentsBuilder.path("/forum_hub/{id}").buildAndExpand(usuarioCadastrado.id());
		return ResponseEntity.created(uri.toUri()).body(usuarioCadastrado);
		
		
	}

	@PostMapping("/login")
	@Transactional
	public ResponseEntity efetuarLogin(@RequestBody @Valid AutenticacaoDTO dto){
		var authenticationToken = new UsernamePasswordAuthenticationToken(dto.email(), dto.senha());
		try {
			var authetication = manager.authenticate(authenticationToken);
			
			var tokenJWT = tokenService.gerarToken((Usuario) authetication.getPrincipal()) ;
			System.out.println(authetication);
			System.out.println(tokenJWT);
			
			return ResponseEntity.ok(tokenJWT);
		}catch(AuthenticationException e) {
			return ResponseEntity.status(403).body("Crendenciais Inv√°lidas!");
		}
	}
}
